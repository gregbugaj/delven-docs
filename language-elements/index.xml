<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Language Elements on Delven Documentation</title>
    <link>/language-elements/</link>
    <description>Recent content in Language Elements on Delven Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/language-elements/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comparison Operators</title>
      <link>/language-elements/comparsion-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/language-elements/comparsion-operators/</guid>
      <description>Comparison operators are used in the WHERE clause to determine which records to select.
   Comparison Operator Description     = Equal   &amp;lt;&amp;gt; Not Equal   != Not Equal   &amp;gt; Greater Than   &amp;gt;= Greater Than or Equal   &amp;lt; Less Than   &amp;lt;= Less Than or Equal   IN Matches a value in a list   NOT Negates a condition   BETWEEN Within a range (inclusive)   EXISTS Condition is met if subquery returns at least one row    [//]: # https://www.</description>
    </item>
    
    <item>
      <title>Implicit Conversion</title>
      <link>/language-elements/coversions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/language-elements/coversions/</guid>
      <description>Delven does implicit conversions for complex types.
What this means is that when we use a selector such as css(&#39;a&#39;) we are actually selecting a HTMLElement not the value associated with the elements, so in order to get the value we follow some rules to do that.
Implicit conversion is ENABLED by default, to disable it we can use the OPTIONS clause.
SELECT css(&amp;#34;#id1&amp;#34;) FROM http://www.delven.io/test/index-01.html OPTIONS { &amp;#34;implicit-conversion&amp;#34; : false } When conversion is ENABLED following two selectors are equivalent.</description>
    </item>
    
    <item>
      <title>Pseudocolumns</title>
      <link>/language-elements/pseudocolumns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/language-elements/pseudocolumns/</guid>
      <description>In addition to columns provided by input objects, Delven provides pseudocolumns, which expressions can also reference. Some pseudocolumns are only available to expressions in certain contexts. Others are generally available to any expression.
Specification    Name Description     PS.FETCH_ID The sequential ID of the current fetch. This ID is global across the entire query.   PS.REQUEST_URL The URL initially visited to load the document, prior to any redirection    </description>
    </item>
    
    <item>
      <title>Table designators</title>
      <link>/language-elements/table-designators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/language-elements/table-designators/</guid>
      <description>A qualifier that designates a specific object table is called a table designator. The clause that identifies the object tables also establishes the table designators for them.
Column name qualifiers to avoid ambiguity One reason for qualifying a column name is to designate the object from which the column comes.
Table designators: A qualifier that designates a specific object table is called a table designator. The clause that identifies the object tables also establishes the table designators for them.</description>
    </item>
    
  </channel>
</rss>
