<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API Reference on Delven Documentation</title>
    <link>/api-reference/</link>
    <description>Recent content in API Reference on Delven Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/api-reference/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API Endpoint</title>
      <link>/api-reference/api-endpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/api-endpoints/</guid>
      <description>Endpoint
https://api.delven.io/v1/script/execute?token=secrettoken&amp;amp;tag=myscript
The API URLs contain an authentication token and therefore should not be shared.</description>
    </item>
    
    <item>
      <title>Capture</title>
      <link>/api-reference/capture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/capture/</guid>
      <description>Capture API</description>
    </item>
    
    <item>
      <title>Cookies</title>
      <link>/api-reference/cookies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/cookies/</guid>
      <description>Cookies API mozilla
The cookie module provides utilities for working with cookies.
To use this module:
const cookies = require(&#39;cookies&#39;); cookie.getAll(details)  details &amp;lt;object&amp;gt; An object containing details that can be used to match cookies to be retrieved  name &amp;lt;string&amp;gt; A string representing a name that the cookies should have. path &amp;lt;string&amp;gt; A string representing a path â€” the cookies&#39; path must be identical to this one.   Returns: &amp;lt;object&amp;gt; array of cookie objects  Retrieves all cookies from a cookie store that match the given information.</description>
    </item>
    
    <item>
      <title>Events</title>
      <link>/api-reference/events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/events/</guid>
      <description>Events API</description>
    </item>
    
    <item>
      <title>File System</title>
      <link>/api-reference/file-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/file-system/</guid>
      <description>The fs module provides an API for interacting with the file system in a manner closely modeled around standard POSIX functions.
Goal of this inerface is to be compatible with Node.js File System API
Compatibility objective : 80%
To use this module:
const fs = require(&#39;fs&#39;); All file system operations have synchronous and asynchronous forms.
fs.readFile(path) Compatibility : broken
Open, read and return text content of a file. It will throw an exception if it fails.</description>
    </item>
    
    <item>
      <title>Forms</title>
      <link>/api-reference/forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/forms/</guid>
      <description>Forms API</description>
    </item>
    
    <item>
      <title>Keyboard Events</title>
      <link>/api-reference/keyboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/keyboard/</guid>
      <description>Keyboard Events API</description>
    </item>
    
    <item>
      <title>Mouse Events</title>
      <link>/api-reference/mouse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/mouse/</guid>
      <description>Mouse Events API</description>
    </item>
    
    <item>
      <title>Path</title>
      <link>/api-reference/path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/path/</guid>
      <description>The path module provides utilities for working with file and directory paths.
Goal of this inerface is to be compatible with Node.js Path API
Compatibility objective : 100%
To use this module:
const path = require(&#39;path&#39;); path.extension(path)  path &amp;lt;string&amp;gt; Path of the file to check Returns: &amp;lt;string&amp;gt; extension  Get the the extension of the path, from the last occurrence of the .
path.extname(path) Alias for path.extension(path)
path.dirname(path)  path &amp;lt;string&amp;gt; Path of the file to check Returns: &amp;lt;string&amp;gt; directory name  Get the directory name of a path, similar to the Unix dirname command.</description>
    </item>
    
    <item>
      <title>Pipeline</title>
      <link>/api-reference/pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/pipeline/</guid>
      <description>Piepline API</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>/api-reference/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api-reference/storage/</guid>
      <description>Storage API</description>
    </item>
    
  </channel>
</rss>
